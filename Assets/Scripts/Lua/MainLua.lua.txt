local FairyGUI = FairyGUI or CS.FairyGUI

EventContext  = FairyGUI.EventContext
EventListener = FairyGUI.EventListener
EventDispatcher = FairyGUI.EventDispatcher
InputEvent = FairyGUI.InputEvent
Stage = FairyGUI.Stage
Controller = FairyGUI.Controller
GObject = FairyGUI.GObject
GGraph = FairyGUI.GGraph
GGroup = FairyGUI.GGroup
GImage = FairyGUI.GImage
GLoader = FairyGUI.GLoader
PlayState = FairyGUI.PlayState
GMovieClip = FairyGUI.GMovieClip
TextFormat = FairyGUI.TextFormat
GTextField = FairyGUI.GTextField
GRichTextField = FairyGUI.GRichTextField
GTextInput = FairyGUI.GTextInput
GComponent = FairyGUI.GComponent
GList = FairyGUI.GList
GRoot = FairyGUI.GRoot
GLabel = FairyGUI.GLabel
GButton = FairyGUI.GButton
GComboBox = FairyGUI.GComboBox
GProgressBar = FairyGUI.GProgressBar
GSlider = FairyGUI.GSlider
PopupMenu = FairyGUI.PopupMenu
ScrollPane = FairyGUI.ScrollPane
Transition = FairyGUI.Transition
UIPackage = FairyGUI.UIPackage
Window = FairyGUI.Window
GObjectPool = FairyGUI.GObjectPool
Relations = FairyGUI.Relations
RelationType = FairyGUI.RelationType


local function Card(button)
    local _back;
	local _front;

    --[[
	public override void ConstructFromXML(FairyGUI.Utils.XML xml)
	{
		base.ConstructFromXML(xml);

		_back = GetChild("n0");
		_front = GetChild("icon");
		_front.visible = false;
	}

	public bool opened
	{
		get
		{
			return _front.visible;
		}

		set
		{
			if (DOTween.IsTweening(this))
				DOTween.Kill(this);

			_front.visible = value;
			_back.visible = !value;
		}
	}

	local function SetPerspective()
		_front.displayObject.perspective = true
		_back.displayObject.perspective = true
    end

	local function Turn()
		if (DOTween.IsTweening(this))
			return;

		bool toOpen = !_front.visible;
		DOTween.To(() => 0, x =>
		{
			if (toOpen)
			{
				_back.rotationY = x;
				_front.rotationY = -180 + x;
				if (x > 90)
				{
					_front.visible = true;
					_back.visible = false;
				}
			}
			else
			{
				_back.rotationY = -180 + x;
				_front.rotationY = x;
				if (x > 90)
				{
					_front.visible = false;
					_back.visible = true;
				}
			}
		}, 180, 0.8f).SetTarget(this).SetEase(Ease.OutQuad);
    end
    ]]

    return button
end

function start()
	print("lua start...")

    UIPackage.AddPackage('TurnCard')
    local view = UIPackage.CreateObject('TurnCard', 'Main')
    GRoot.inst:AddChild(view)

    local _c0 = Card(view:GetChild("c0"))
    local _c1 = Card(view:GetChild("c1"))

    print("=== 11 ===", _c0, _c1)

    local function OnClick0(context)
        print("test click 00", context)
    end

    _c0.onClick:Add(OnClick0)

    local function OnClick1(context)
        print("test click 11", context)
    end

    _c1.onClick:Add(OnClick1)
end

function update()
    --print("lua update...", r)
end

function ondestroy()
    print("lua destroy")
end
